var documenterSearchIndex = {"docs":
[{"location":"orbitals/#Orbitals-and-quantum-systems","page":"Orbitals","title":"Orbitals and quantum systems","text":"","category":"section"},{"location":"orbitals/","page":"Orbitals","title":"Orbitals","text":"When calculating matrix elements of tensor components (using the The Wigner–Eckart theorem), it is important to know which part of the quantum system the tensor acts on, e.g. tensorC and tensornabla act on the spatial part of a spin-orbital (the coordinates r, theta, and phi, or equivalently, the quantum numbers n, ell, m_ell), whereas tensorS acts on the spin part (the coordinate s, or equivalently, the quantum numbers s and m_s).","category":"page"},{"location":"orbitals/","page":"Orbitals","title":"Orbitals","text":"AngularMomentumAlgebra.System\nAngularMomentumAlgebra.SubSystem\nAngularMomentumAlgebra.FullSystem\nAngularMomentumAlgebra.SpatialSubSystem\nAngularMomentumAlgebra.OrbitalAngularMomentumSubSystem\nAngularMomentumAlgebra.SpinSubSystem\nAngularMomentumAlgebra.TotalAngularMomentumSubSystem","category":"page"},{"location":"orbitals/#AngularMomentumAlgebra.System","page":"Orbitals","title":"AngularMomentumAlgebra.System","text":"System\n\nThe abstract base type for a (quantum) system.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.SubSystem","page":"Orbitals","title":"AngularMomentumAlgebra.SubSystem","text":"SubSystem{which}\n\nA subsystem, i.e. limited to a set of coordinates.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.FullSystem","page":"Orbitals","title":"AngularMomentumAlgebra.FullSystem","text":"FullSystem\n\nThe entire system, i.e. all coordinates.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.SpatialSubSystem","page":"Orbitals","title":"AngularMomentumAlgebra.SpatialSubSystem","text":"SpatialSubSystem\n\nThe spatial subsystem, i.e. the coordinates r, θ, and ϕ.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.OrbitalAngularMomentumSubSystem","page":"Orbitals","title":"AngularMomentumAlgebra.OrbitalAngularMomentumSubSystem","text":"OrbitalAngularMomentaSubSystem\n\nThe orbital angular momentum subsystem, i.e. the coordinates, θ and ϕ.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.SpinSubSystem","page":"Orbitals","title":"AngularMomentumAlgebra.SpinSubSystem","text":"SpinSubSystem\n\nThe spin subsystem, i.e. the coordinate s.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/#AngularMomentumAlgebra.TotalAngularMomentumSubSystem","page":"Orbitals","title":"AngularMomentumAlgebra.TotalAngularMomentumSubSystem","text":"TotalAngularMomentumSubSystem\n\nThe total angular momentum subsystem, i.e. the coordinates, θ, ϕ, and s.\n\n\n\n\n\n","category":"type"},{"location":"orbitals/","page":"Orbitals","title":"Orbitals","text":"Given the different systems and subsystems listed above, it is interesting to access the quantum numbers of an orbital pertaining to these. For this, quantum_numbers(::System, ::SpinOrbital) is provided, which returns Tuples of (magnitudes,), projection, where projection is either a Number or missing if it is not a good quantum number, e.g. m_ell being the projection quantum number for both AngularMomentumAlgebra.SpatialSubSystem and AngularMomentumAlgebra.OrbitalAngularMomentumSubSystem is not a good quantum number for coupled spin-orbitals (ketn ell j m_j).","category":"page"},{"location":"orbitals/","page":"Orbitals","title":"Orbitals","text":"julia> using AngularMomentumAlgebra, AtomicLevels, HalfIntegers\n\njulia> o = SpinOrbital(o\"3d\", 1, -half(1))\n3d₁β\n\njulia> ro = SpinOrbital(ro\"3d\", half(1))\n3d(1/2)\n\njulia> quantum_numbers(FullSystem(), o)\n(((3, 2), 1), (1/2, -1/2))\n\njulia> quantum_numbers(FullSystem(), ro)\n((3, 2, 1/2, 5/2), 1/2)\n\njulia> quantum_numbers(SpatialSubSystem(), o)\n((3, 2), 1)\n\njulia> quantum_numbers(SpatialSubSystem(), ro)\n((3, 2), missing)\n\njulia> quantum_numbers(OrbitalAngularMomentumSubSystem(), o)\n(2, 1)\n\njulia> quantum_numbers(OrbitalAngularMomentumSubSystem(), ro)\n(2, missing)\n\njulia> quantum_numbers(SpinSubSystem(), o)\n(1/2, -1/2)\n\njulia> quantum_numbers(SpinSubSystem(), ro)\n(1/2, missing)\n\njulia> quantum_numbers(TotalAngularMomentumSubSystem(), o)\n((2, 1), (1/2, -1/2))\n\njulia> quantum_numbers(TotalAngularMomentumSubSystem(), ro)\n((2, 1/2, 5/2), 1/2)","category":"page"},{"location":"orbitals/","page":"Orbitals","title":"Orbitals","text":"AngularMomentumAlgebra.quantum_numbers\nAngularMomentumAlgebra.other_quantum_numbers","category":"page"},{"location":"orbitals/#AngularMomentumAlgebra.quantum_numbers","page":"Orbitals","title":"AngularMomentumAlgebra.quantum_numbers","text":"quantum_numbers(system, a, b)\n\nReturn the quantum numbers characterizing system for the orbitals a and b.\n\n\n\n\n\nquantum_numbers(::FullSystem, o::SpinOrbital{<:Orbital})\n\nThe full system of an uncoupled spin-orbital is nell m_ell s m_s, where  denotes that the spatial and spin subsystems are separable.\n\n\n\n\n\nquantum_numbers(::FullSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe full system of a coupled spin-orbital is nell s j m_j.\n\n\n\n\n\nquantum_numbers(::SpatialSubSystem, o::SpinOrbital{<:Orbital})\n\nThe spatial subsystem of an uncoupled spin-orbital is nell m_ell.\n\n\n\n\n\nquantum_numbers(::SpatialSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe spatial subsystem of a coupled spin-orbital is just nell m_ell; m_ell is not a good quantum number.\n\n\n\n\n\nquantum_numbers(::OrbitalAngularMomentumSubSystem, o::SpinOrbital{<:Orbital})\n\nThe orbital angular momentum subsystem of an uncoupled spin-orbital is ell m_ell.\n\n\n\n\n\nquantum_numbers(::OrbitalAngularMomentumSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe orbital angular momentum subsystem of a coupled spin-orbital is just ell; m_ell is not a good quantum number.\n\n\n\n\n\nquantum_numbers(::SpinSubSystem, o::SpinOrbital{<:Orbital})\n\nThe spin subsystem of an uncoupled spin-orbital is s m_s.\n\n\n\n\n\nquantum_numbers(::SpinSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe spin subsystem of a coupled spin-orbital is just s; m_s is not a good quantum number.\n\n\n\n\n\nquantum_numbers(::TotalAngularMomentumSubSystem, o::SpinOrbital{<:Orbital})\n\nThe total angular momentum of an uncoupled spin-orbital is not a good quantum number; only its projection is known. The system is specified by ell m_ell s m_s, where  denotes that the spatial and spin subsystems are separable.\n\n\n\n\n\nquantum_numbers(::TotalAngularMomentumSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe total angular momentum subsystem of a coupled spin-orbital just ell s j m_j.\n\n\n\n\n\n","category":"function"},{"location":"orbitals/#AngularMomentumAlgebra.other_quantum_numbers","page":"Orbitals","title":"AngularMomentumAlgebra.other_quantum_numbers","text":"other_quantum_numbers(system, a, b)\n\nReturn the quantum numbers characterizing the orthogonal complement to system for the orbitals a and b.\n\n\n\n\n\nother_quantum_numbers(::FullSystem, ::SpinOrbital)\n\nNo quantum numbers characterize the orthogonal complement to FullSystem.\n\n\n\n\n\nother_quantum_numbers(::SpatialSubSystem, o::SpinOrbital{<:Orbital})\n\nThe orthogonal complement to SpatialSubSystem is SpinSubSystem, which is characterized by sm_s.\n\n\n\n\n\nother_quantum_numbers(::SpatialSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe orthogonal complement to SpatialSubSystem is SpinSubSystem, which is characterized by s; its projection is not a good quantum number in the coupled basis.\n\n\n\n\n\nother_quantum_numbers(::OrbitalAngularMomentumSubSystem, o::SpinOrbital{<:Orbital})\n\nThe orthogonal complement to OrbitalAngularMomentumSubSystem is characterized by the quantum numbers n s m_s.\n\n\n\n\n\nother_quantum_numbers(::OrbitalAngularMomentumSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe orthogonal complement to OrbitalAngularMomentumSubSystem is characterized by the quantum numbers n s; the projection of the latter is not a good quantum number in the coupled basis.\n\n\n\n\n\nother_quantum_numbers(::SpinSubSystem, o::SpinOrbital{<:Orbital})\n\nThe orthogonal complement to SpinSubSystem is SpatialSubSystem which is characterized by the quantum numbers n ell m_ell.\n\n\n\n\n\nother_quantum_numbers(::SpinSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe orthogonal complement to SpinSubSystem is SpatialSubSystem which is characterized by the quantum numbers n ell; the projection of the latter is not a good quantum number in the coupled basis.\n\n\n\n\n\nother_quantum_numbers(::TotalAngularMomentumSubSystem, o::SpinOrbital{<:Orbital})\n\nThe orthogonal complement to TotalAngularMomentumSubSystem is characterized by the principal quantum number n; however, this does not affect the matrix elements of 𝐉, so it is silently ignored.\n\n\n\n\n\nother_quantum_numbers(::TotalAngularMomentumSubSystem, o::SpinOrbital{<:RelativisticOrbital})\n\nThe orthogonal complement to TotalAngularMomentumSubSystem is characterized by the principal quantum number n; however, this does not affect the matrix elements of 𝐉, so it is silently ignored.\n\n\n\n\n\n","category":"function"},{"location":"angular_momenta/#Angular-Momenta","page":"Angular momenta","title":"Angular Momenta","text":"","category":"section"},{"location":"angular_momenta/#orbital_angular_momentum","page":"Angular momenta","title":"Orbital angular momentum","text":"","category":"section"},{"location":"angular_momenta/","page":"Angular momenta","title":"Angular momenta","text":"OrbitalAngularMomentum\nrme(ℓ′, ::OrbitalAngularMomentum, ℓ)\nAngularMomentumAlgebra.couplings(tensor::OrbitalAngularMomentum, ℓ)","category":"page"},{"location":"angular_momenta/#AngularMomentumAlgebra.OrbitalAngularMomentum","page":"Angular momenta","title":"AngularMomentumAlgebra.OrbitalAngularMomentum","text":"OrbitalAngularMomentum()\n\nThe angular momentum tensorL is associated with the spatial coordinates theta and phi.\n\n\n\n\n\n","category":"type"},{"location":"angular_momenta/#AngularMomentumAlgebra.rme-Tuple{Any, OrbitalAngularMomentum, Any}","page":"Angular momenta","title":"AngularMomentumAlgebra.rme","text":"rme(ℓ′, 𝐋̂, ℓ)\n\nCalculate the reduced matrix element of the orbital angular momentum:\n\nbeginequation\ntagV13267\nredmatrixelelltensorLell defd\ndelta_ellellsqrtell(ell+1)(2ell+1)\nendequation\n\nExamples\n\njulia> rme(1, OrbitalAngularMomentum(), 1)\n2.449489742783178\n\njulia> rme(1, OrbitalAngularMomentum(), 2)\n0\n\n\n\n\n\n","category":"method"},{"location":"angular_momenta/#AngularMomentumAlgebra.couplings-Tuple{OrbitalAngularMomentum, Any}","page":"Angular momenta","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::OrbitalAngularMomentum, ℓ)\n\nGenerate all quantum numbers ℓ′ for which ⟨ℓ′||::OrbitalAngularMomentum||ℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"angular_momenta/#spin_angular_momentum","page":"Angular momenta","title":"Spin angular momentum","text":"","category":"section"},{"location":"angular_momenta/","page":"Angular momenta","title":"Angular momenta","text":"SpinAngularMomentum\nrme(s′, ::SpinAngularMomentum, s)\nAngularMomentumAlgebra.couplings(tensor::SpinAngularMomentum, s)","category":"page"},{"location":"angular_momenta/#AngularMomentumAlgebra.SpinAngularMomentum","page":"Angular momenta","title":"AngularMomentumAlgebra.SpinAngularMomentum","text":"SpinAngularMomentum()\n\nThe spin angular momentum tensorS is the intrinsic angular momentum associated with the coordinate s.\n\n\n\n\n\n","category":"type"},{"location":"angular_momenta/#AngularMomentumAlgebra.rme-Tuple{Any, SpinAngularMomentum, Any}","page":"Angular momenta","title":"AngularMomentumAlgebra.rme","text":"rme(s′, ::SpinAngularMomentum, s)\n\nCalculate the reduced matrix element of the spin angular momentum:\n\nbeginequation\ntagV13295\nredmatrixelstensorSs defd\ndelta_ss\nsqrts(s+1)(2s+1)\nendequation\n\nExamples\n\njulia> rme(half(1), SpinAngularMomentum(), half(1))\n1.224744871391589\n\njulia> rme(half(1), SpinAngularMomentum(), half(3))\n0\n\n\n\n\n\n","category":"method"},{"location":"angular_momenta/#AngularMomentumAlgebra.couplings-Tuple{SpinAngularMomentum, Any}","page":"Angular momenta","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::SpinAngularMomentum, s)\n\nGenerate all quantum numbers s′ for which ⟨s′||::SpinAngularMomentum||s⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"angular_momenta/#total_angular_momentum","page":"Angular momenta","title":"Total angular momentum","text":"","category":"section"},{"location":"angular_momenta/","page":"Angular momenta","title":"Angular momenta","text":"TotalAngularMomentum\nrme((ℓ′,s′,J′)::Tuple{<:Number, <:Number, <:Number}, ::TotalAngularMomentum, (ℓ,s,J)::Tuple{<:Number, <:Number, <:Number})\nAngularMomentumAlgebra.couplings(tensor::TotalAngularMomentum, (ℓ,s,J)::Tuple{<:Number, <:Number, <:Number})","category":"page"},{"location":"angular_momenta/#AngularMomentumAlgebra.TotalAngularMomentum","page":"Angular momenta","title":"AngularMomentumAlgebra.TotalAngularMomentum","text":"TotalAngularMomentum()\n\nThe total angular momentum tensorJ = tensorL + tensorS results from the coupling of the orbital and spin angular momenta.\n\n\n\n\n\n","category":"type"},{"location":"angular_momenta/#AngularMomentumAlgebra.rme-Tuple{Tuple{Number, Number, Number}, TotalAngularMomentum, Tuple{Number, Number, Number}}","page":"Angular momenta","title":"AngularMomentumAlgebra.rme","text":"rme((ℓ′,s′,J′), ::TotalAngularMomentum, (ℓ,s,J))\n\nCalculate the reduced matrix element of the total angular momentum:\n\nbeginequation\ntagV13238\nredmatrixelellsJtensorJell s J defd\ndelta_ellelldelta_ssdelta_JJ\nsqrtJ(J+1)(2J+1)\nendequation\n\nExamples\n\njulia> rme((1,half(1),half(3)), TotalAngularMomentum(), (1,half(1),half(3)))\n3.872983346207417\n\njulia> rme((1,half(1),half(3)), TotalAngularMomentum(), (1,half(1),half(1)))\n0\n\n\n\n\n\n","category":"method"},{"location":"angular_momenta/#AngularMomentumAlgebra.couplings-Tuple{TotalAngularMomentum, Tuple{Number, Number, Number}}","page":"Angular momenta","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::TotalAngularMomentum, (ℓ, s, J))\n\nGenerate all quantum numbers ℓ′s′J′ for which ⟨ℓ′s′J′||::TotalAngularMomentum||ℓsJ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"coulomb/#Coulomb-interaction","page":"Coulomb interaction","title":"Coulomb interaction","text":"","category":"section"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"DocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\nend","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"The Coulomb interaction between two electrons at coordinates 1 and 2, respectively, can in spherical coordinates be multipole-expanded as:","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"beginequation\nfrac1r_12 =\nsum_k=0^infty\nfracr_^kr_^k+1\nP_k(costheta)\nendequation","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"which by the addition theorem for the spherical harmonics can be further expanded as","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"beginequation\nfrac1r_12 =\nsum_kq\nfrac4pi2k+1\nfracr_^kr_^k+1\nconjY^k_q(1)Y^k_q(2)equiv\nsum_k\nfracr_^kr_^k+1\ntensorC^k(1)cdottensorC^k(2)\ntagV5179\nendequation","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"where we in the last step have used the definition of the Spherical tensors. By introducing the help-tensor","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"beginequation\ntensorK^(k)(i) defd\nleft1-Heaviside(r_j-r_i)r_i^k +\nfracHeaviside(r_j-r_i)r_i^k+1right\ntensorC^(k)(i)\nquad\ni = 12\nquad\nj = 3-i\nendequation","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"where","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"beginequation\nHeaviside(x) = begincases\n0  x  0\n1  x  0\nendcases\nendequation","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"is the Heaviside function, we can rewrite the Coulomb interaction as","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"beginequation\nfrac1r_12=\nsum_k\ntensorK^(k)(1)cdottensorK^(k)(2)\ntagV5179*\nendequation","category":"page"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":"CoulombInteractionMultipole\nCoulombPotentialMultipole\nCoulombTensor\nsystem(::Type{CoulombTensor})\nrme((n′,ℓ′), ::CoulombTensor, (n,ℓ))\nAngularMomentumAlgebra.couplings(tensor::CoulombTensor, (n,ℓ)::Tuple{<:Number, <:Number})","category":"page"},{"location":"coulomb/#AngularMomentumAlgebra.CoulombInteractionMultipole","page":"Coulomb interaction","title":"AngularMomentumAlgebra.CoulombInteractionMultipole","text":"CoulombInteractionMultipole(k, g)\n\nRepresents the kth multipole of the multipole expansion of the Coulomb interaction g.\n\n\n\n\n\n","category":"type"},{"location":"coulomb/#AngularMomentumAlgebra.CoulombPotentialMultipole","page":"Coulomb interaction","title":"AngularMomentumAlgebra.CoulombPotentialMultipole","text":"CoulombPotentialMultipole\n\nType alias for contraction of the CoulombInteractionMultipole over one coordinate, thereby forming a potential in the other coordinate.\n\n\n\n\n\n","category":"type"},{"location":"coulomb/#AngularMomentumAlgebra.CoulombTensor","page":"Coulomb interaction","title":"AngularMomentumAlgebra.CoulombTensor","text":"CoulombTensor(k)\n\nConstruct a Coulomb interaction tensor of rank k.\n\n\n\n\n\n","category":"type"},{"location":"coulomb/#AngularMomentumAlgebra.system-Tuple{Type{CoulombTensor}}","page":"Coulomb interaction","title":"AngularMomentumAlgebra.system","text":"system(::Tensor)\n\nA general tensor acts on the full system, i.e. all coordinates.\n\n\n\n\n\nsystem(::Type{CoulombTensor})\n\nA Coulomb tensor only acts on the coordinates r, theta and phi.\n\n\n\n\n\n","category":"method"},{"location":"coulomb/#AngularMomentumAlgebra.rme-Tuple{Any, CoulombTensor, Any}","page":"Coulomb interaction","title":"AngularMomentumAlgebra.rme","text":"rme((n′,ℓ′), ::CoulombTensor{k}, (n,ℓ))\n\nComputes the reduced matrix element of 𝐊.\n\n\n\n\n\n","category":"method"},{"location":"coulomb/#AngularMomentumAlgebra.couplings-Tuple{CoulombTensor, Tuple{Number, Number}}","page":"Coulomb interaction","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::CoulombTensor{k}, (n, ℓ)) where k\n\nGenerate all quantum numbers n′ℓ′ for which ⟨n′ℓ′||::CoulombTensor{k}||nℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"coulomb/","page":"Coulomb interaction","title":"Coulomb interaction","text":" DocTestSetup = nothing","category":"page"},{"location":"tensor_dsl/#DSL-for-specifying-new-tensors","page":"Tensor DSL","title":"DSL for specifying new tensors","text":"","category":"section"},{"location":"tensor_dsl/","page":"Tensor DSL","title":"Tensor DSL","text":"When specifying a new tensor type, a few functions need to be provided:","category":"page"},{"location":"tensor_dsl/","page":"Tensor DSL","title":"Tensor DSL","text":"AngularMomentumAlgebra.system(::Type{TensorType}) which returns the AngularMomentumAlgebra.System the tensor acts on,\nBase.iszero which indicates whether a reduced matrix element of the tensor vanishes without actually computing it,\ncouplings which generates all sets of quantum numbers the tensor couples to from a given set of quantum numbers,\nrme which computes the actual reduced matrix element.","category":"page"},{"location":"tensor_dsl/","page":"Tensor DSL","title":"Tensor DSL","text":"AngularMomentumAlgebra.@tensor\nAngularMomentumAlgebra.strip′\nAngularMomentumAlgebra.identify_quantum_numbers\nAngularMomentumAlgebra.recursepm\nAngularMomentumAlgebra.parse_selection_rule\nAngularMomentumAlgebra.generate_iszero\nAngularMomentumAlgebra.generate_rme\nAngularMomentumAlgebra.generate_couplings","category":"page"},{"location":"tensor_dsl/#AngularMomentumAlgebra.@tensor","page":"Tensor DSL","title":"AngularMomentumAlgebra.@tensor","text":"@tensor(exprs, TensorType)\n\nMacro to generate Base.iszero, rme and couplings for TensorType, given a set of selection rules and an expression for the reduced matrix element.\n\n\n\n\n\n","category":"macro"},{"location":"tensor_dsl/#AngularMomentumAlgebra.strip′","page":"Tensor DSL","title":"AngularMomentumAlgebra.strip′","text":"strip′(s::Symbol)\n\nStrip s of a trailing ′, error if it is not present.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.identify_quantum_numbers","page":"Tensor DSL","title":"AngularMomentumAlgebra.identify_quantum_numbers","text":"identify_quantum_numbers(selection_rules)\n\nGiven the block of selection rules, identify the quantum numbers pertaining to the tensor under consideration. It is assumed that the left-hand side consists of a primed quantum number only, which is specified to be equal to an expression or belonging to a set/interval.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.recursepm","page":"Tensor DSL","title":"AngularMomentumAlgebra.recursepm","text":"recursepm(e::Expr)\n\nRecursively expand the expression e for instances of ± and ∓, generating + and - minus branches.\n\n\n\n\n\nrecursepm(lhs, rhs)\n\nRecursively expand lhs and rhs for instances of ± and ∓ and join all resulting cases into a short-circuiting || test.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.parse_selection_rule","page":"Tensor DSL","title":"AngularMomentumAlgebra.parse_selection_rule","text":"parse_selection_rule(rule)\n\nParse a selection rule in the DSL of @tensor; if the selection rule is an equality, its left- and right-hand sides are recursively expanded for possible cases of ± and ∓ with recursepm.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.generate_iszero","page":"Tensor DSL","title":"AngularMomentumAlgebra.generate_iszero","text":"generate_iszero(TensorType, selection_rules, selection_rules_linenum)\n\nGenerate a function for testing if the matrix element of TensorType vanishes, given a set a quantum number deduced from selection_rules, given at line number selection_rules_linenum.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.generate_rme","page":"Tensor DSL","title":"AngularMomentumAlgebra.generate_rme","text":"generate_rme(TensorType, selection_rules, doc, rme, rme_linenum)\n\nGenerate a function for computing the reduced matrix element of TensorType, given a set a quantum number deduced from selection_rules, along with the docstring and the definition rme, given at line number rme_linenum.\n\n\n\n\n\n","category":"function"},{"location":"tensor_dsl/#AngularMomentumAlgebra.generate_couplings","page":"Tensor DSL","title":"AngularMomentumAlgebra.generate_couplings","text":"generate_copulings(TensorType, selection_rules, selection_rules_linenum)\n\nGenerate a function that given the quantum numbers γj generates lists of all permissible γj′ for which the reduced matrix element ⟨γj′||::TensorType||γj⟩ does not vanish. This is deduced from the selection_rules, given at line number selection_rules_linenum.\n\n\n\n\n\n","category":"function"},{"location":"common/#Common-routines","page":"Common routines","title":"Common routines","text":"","category":"section"},{"location":"common/","page":"Common routines","title":"Common routines","text":"CurrentModule = AngularMomentumAlgebra\nDocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\nend","category":"page"},{"location":"common/","page":"Common routines","title":"Common routines","text":"∏\ntriangle_range\npowneg1\njmⱼ\nspin\nLinearCombination\n@linearly_combinable\n@δ\ncouplings(j₁, m₁, j₂, m₂)","category":"page"},{"location":"common/#AngularMomentumAlgebra.∏","page":"Common routines","title":"AngularMomentumAlgebra.∏","text":"∏(ℓs...)\n\nCalculates √((2ℓ₁+1)(2ℓ₂+1)...(2ℓₙ+1)), which is a common factor in angular momentum algebra.\n\n\n\n\n\n","category":"function"},{"location":"common/#AngularMomentumAlgebra.triangle_range","page":"Common routines","title":"AngularMomentumAlgebra.triangle_range","text":"triangle_range(a,b)\n\nFind all k such that |a-b| ≤ k ≤ a + b. This is useful when expanding matrix elements of tensors between angular momenta a and b in multipoles k; triangle_range can then be used to decided which multipole terms are required.\n\n\n\n\n\n","category":"function"},{"location":"common/#AngularMomentumAlgebra.powneg1","page":"Common routines","title":"AngularMomentumAlgebra.powneg1","text":"powneg1(k) = (-)ᵏ\n\nCalculates powers of negative unity for integer k.\n\n\n\n\n\n","category":"function"},{"location":"common/#AngularMomentumAlgebra.jmⱼ","page":"Common routines","title":"AngularMomentumAlgebra.jmⱼ","text":"jmⱼ(o::SpinOrbital)\n\nReturn the angular momentum and its projection on the z axis of the spin-orbital o.\n\n\n\n\n\n","category":"function"},{"location":"common/#AngularMomentumAlgebra.spin","page":"Common routines","title":"AngularMomentumAlgebra.spin","text":"spin(o::SpinOrbital)\n\nReturn the spin of the spin-orbital o.\n\n\n\n\n\n","category":"function"},{"location":"common/#AngularMomentumAlgebra.LinearCombination","page":"Common routines","title":"AngularMomentumAlgebra.LinearCombination","text":"LinearCombination(Ts::Vector{T}, coeffs::Vector{N})\n\nRepresents a general linear combination of objects of type T.\n\n\n\n\n\n","category":"type"},{"location":"common/#AngularMomentumAlgebra.@linearly_combinable","page":"Common routines","title":"AngularMomentumAlgebra.@linearly_combinable","text":"@linearly_combinable TT\n\nTurns the type TT into a linearly combinable type, i.e. defines arithmetic operators.\n\nExamples\n\njulia> @linearly_combinable Symbol\n\njulia> 4*(:x) - 5*(:y)\n4 :x - 5 :y\n\n\n\n\n\n","category":"macro"},{"location":"common/#AngularMomentumAlgebra.@δ","page":"Common routines","title":"AngularMomentumAlgebra.@δ","text":"@δ (a,b)[, (c,d) ...]\n\nKronecker delta_abdelta_cd that tests each pair of values for equality and quick-returns 0 at the first inequality. Thus intended usage is within a function body, and not as part of an expression.\n\nExample\n\njulia> import AngularMomentumAlgebra: @δ\n\njulia> function my_function(a,b)\n           @δ a,b # Quick-returns unless a and b are equal\n           sin(a)\n       end\nmy_function (generic function with 1 method)\n\njulia> my_function(1,1)\n0.8414709848078965\n\njulia> my_function(1,0)\n0\n\n\n\n\n\n","category":"macro"},{"location":"common/#AngularMomentumAlgebra.couplings-NTuple{4, Any}","page":"Common routines","title":"AngularMomentumAlgebra.couplings","text":"couplings(j₁, m₁, j₂, m₂)\n\nReturn all j, m for which the Clebsch–Gordan coefficient ⟨j₁m₁ j₂m₂|jm⟩ is non-zero.\n\n\n\n\n\n","category":"method"},{"location":"common/","page":"Common routines","title":"Common routines","text":"CurrentModule = nothing\nDocTestSetup = nothing","category":"page"},{"location":"tensor_matrix_elements/#Tensor-matrix-elements","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"The matrix element of any irreducible tensor operator of rank k is defined as","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"beginequation\ntagV1311\nmatrixelnjmtensorT^(k)_qnjm defd\nintdifftau\nconjPsi_njm\ntensorT^(k)_q\nPsi_njm\nendequation","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"For simple quantum systems, it is most easily evaluated using the Wigner–Eckart theorem; however, in most cases, the quantum system and/or the tensor is composed of multiple parts, which complicates the situation. The table below shows the most common cases:","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"Basis \\ Tensor Acts on entire system Acts on subsystems\nUncoupled Transform to coupled basis: eqrefeqncoupling Evaluation in subspace\nCoupled Wigner–Eckart: eqrefeqnwigner-eckart Uncoupling: eqrefeqnuncoupling","category":"page"},{"location":"tensor_matrix_elements/#Interface","page":"Tensor matrix elements","title":"Interface","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"There are two interfaces provided for computation of matrix element of tensor operators:","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"A low-level interface matrix_element((γj′, m′), 𝐓ᵏq, (γj′, m′)) (and friends), where γj′, m′, γj′, and m′ are quantum numbers.\nA high-level interface dot(a, 𝐓ᵏq, b), where a and b are SpinOrbitals from AtomicLevels.jl. The high-level interface dispatches as appropriate to the low-level interface, depending on whether a and b are expressed in the coupled basis or not, and which part of the quantum system 𝐓ᵏq acts on.","category":"page"},{"location":"tensor_matrix_elements/#High-level-interface","page":"Tensor matrix elements","title":"High-level interface","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"There are two main functions in the high-level interface:","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"dot(a, 𝐓ᵏq, b) for one-body interactions\ndot((a,b), 𝐓ᵏq, (c,d)) for two-body interactions (e.g. Coulomb interaction).","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"LinearAlgebra.dot(a::SpinOrbital, 𝐓ᵏq::TensorComponent, b::SpinOrbital)\nLinearAlgebra.dot((a,b)::Tuple, X::TensorScalarProduct, (c,d)::Tuple)","category":"page"},{"location":"tensor_matrix_elements/#LinearAlgebra.dot-Tuple{SpinOrbital, TensorComponent, SpinOrbital}","page":"Tensor matrix elements","title":"LinearAlgebra.dot","text":"dot(a::SpinOrbital,\n    𝐓ᵏq::Union{TensorComponent,TensorScalarProduct},\n    b::SpinOrbital)\n\nCompute the matrix element ⟨a|𝐓ᵏq|b⟩ in the basis of spin-orbitals, dispatching to the correct low-level function matrix_element, depending on the value of system(𝐓ᵏq).\n\nExamples with coupled orbitals\n\njulia> a,b,c,d = (SpinOrbital(ro\"2p\", half(3)),\n                  SpinOrbital(ro\"2p\", half(1)),\n                  SpinOrbital(ro\"2s\", half(1)),\n                  SpinOrbital(ro\"3d\", half(3)))\n(2p(3/2), 2p(1/2), 2s(1/2), 3d(3/2))\n\njulia> 𝐋, 𝐒, 𝐉 = OrbitalAngularMomentum(), SpinAngularMomentum(), TotalAngularMomentum()\n(𝐋̂⁽¹⁾, 𝐒̂⁽¹⁾, 𝐉̂⁽¹⁾)\n\njulia> 𝐋², 𝐒², 𝐉² = 𝐋⋅𝐋, 𝐒⋅𝐒, 𝐉⋅𝐉\n((𝐋̂⁽¹⁾⋅𝐋̂⁽¹⁾), (𝐒̂⁽¹⁾⋅𝐒̂⁽¹⁾), (𝐉̂⁽¹⁾⋅𝐉̂⁽¹⁾))\n\njulia> dot(a, cartesian_tensor_component(𝐉, :x), b),\n           1/2*√((3/2+1/2+1)*(3/2-1/2)) # 1/2√((J+M+1)*(J-M))\n(0.8660254037844386, 0.8660254037844386)\n\njulia> dot(a, cartesian_tensor_component(𝐉, :z), a), a.m[1]\n(1.5, 3/2)\n\njulia> dot(a, TensorComponent(𝐋, 0), a)\n0.9999999999999999\n\njulia> dot(c, cartesian_tensor_component(Gradient(), :x), a)\n- 0.408248(∂ᵣ + 2/r)\n\njulia> dot(c, cartesian_tensor_component(SphericalTensor(1), :x), a)\n-0.40824829046386296\n\njulia> orbitals = rsos\"2[p]\"\n6-element Array{SpinOrbital{RelativisticOrbital{Int64},Tuple{Half{Int64}}},1}:\n 2p-(-1/2)\n 2p-(1/2)\n 2p(-3/2)\n 2p(-1/2)\n 2p(1/2)\n 2p(3/2)\n\njulia> map(o -> dot(o, 𝐉², o), orbitals)\n6-element Array{Float64,1}:\n 0.7499999999999998\n 0.7499999999999998\n 3.7500000000000004\n 3.7500000000000004\n 3.7500000000000004\n 3.7500000000000004\n\njulia> 1/2*(1/2+1),3/2*(3/2+1) # J(J+1)\n(0.75, 3.75)\n\njulia> dot(a, 𝐋², a), 1*(1+1)\n(2.0, 2)\n\njulia> dot(d, 𝐋², d), 2*(2+1)\n(5.999999999999999, 6)\n\njulia> dot(a, 𝐒², a), 1/2*(1/2+1)\n(0.7499999999999998, 0.75)\n\njulia> dot(a, 𝐋⋅𝐒, a)\n0.4999999999999999\n\nExamples with uncoupled orbitals\n\njulia> a,b,c,d = (SpinOrbital(o\"2p\", 1, half(1)),\n                  SpinOrbital(o\"2p\", -1, half(1)),\n                  SpinOrbital(o\"2s\", 0, half(1)),\n                  SpinOrbital(o\"3d\", 2, -half(1)))\n(2p₁α, 2p₋₁α, 2s₀α, 3d₂β)\n\njulia> 𝐋,𝐒,𝐉 = OrbitalAngularMomentum(),SpinAngularMomentum(),TotalAngularMomentum()\n(𝐋̂⁽¹⁾, 𝐒̂⁽¹⁾, 𝐉̂⁽¹⁾)\n\njulia> 𝐋²,𝐒²,𝐉² = 𝐋⋅𝐋,𝐒⋅𝐒,𝐉⋅𝐉\n((𝐋̂⁽¹⁾⋅𝐋̂⁽¹⁾), (𝐒̂⁽¹⁾⋅𝐒̂⁽¹⁾), (𝐉̂⁽¹⁾⋅𝐉̂⁽¹⁾))\n\njulia> dot(a, cartesian_tensor_component(𝐉, :z), a), sum(a.m)\n(1.5, 3/2)\n\njulia> dot(a, TensorComponent(𝐋, 0), a)\n0.9999999999999999\n\njulia> # Same as previous, but with spin down\n       dot(a, TensorComponent(𝐋, 0), SpinOrbital(o\"2p\", 1, -half(1)))\n0\n\njulia> dot(d, TensorComponent(𝐋, 0), d)\n1.9999999999999998\n\njulia> dot(d, TensorComponent(𝐒, 0), d)\n-0.49999999999999994\n\njulia> dot(c, cartesian_tensor_component(Gradient(), :x), a)\n- 0.408248(∂ᵣ + 2/r)\n\njulia> dot(c, cartesian_tensor_component(SphericalTensor(1), :x), a)\n-0.40824829046386285\n\njulia> orbitals = sos\"2[p]\"\n6-element Array{SpinOrbital{Orbital{Int64},Tuple{Int64,Half{Int64}}},1}:\n 2p₋₁α\n 2p₋₁β\n 2p₀α\n 2p₀β\n 2p₁α\n 2p₁β\n\njulia> # Only 2p₋₁β and 2p₁α are pure states, with J = 3/2 => J(J + 1) = 3.75\n       map(o -> dot(o, 𝐉², o), orbitals)\n6-element Array{Float64,1}:\n 1.7499999999999998\n 3.7500000000000004\n 2.75\n 2.75\n 3.7500000000000004\n 1.7499999999999998\n\njulia> dot(a, 𝐋², a), 1*(1+1)\n(2.0, 2)\n\njulia> dot(d, 𝐋², d), 2*(2+1)\n(5.999999999999999, 6)\n\njulia> dot(a, 𝐒², a), half(1)*(half(1)+1)\n(0.7499999999999998, 0.75)\n\njulia> dot(a, 𝐋⋅𝐒, a)\n0.4999999999999999\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#LinearAlgebra.dot-Tuple{Tuple, TensorScalarProduct, Tuple}","page":"Tensor matrix elements","title":"LinearAlgebra.dot","text":"dot((a,b)::Tuple, X::TensorScalarProduct, (c,d)::Tuple)\n\nCompute the matrix element ⟨a(1)b(2)|𝐓(1)⋅𝐔(2)|c(1)d(2)⟩ in the basis of spin-orbitals, dispatching the correct low-level function matrix_element depending on the value of system(X), where X is the scalar product tensor.\n\nExamples\n\njulia> 𝐊⁰,𝐊² = CoulombTensor(0),CoulombTensor(2)\n(𝐊̂⁽⁰⁾, 𝐊̂⁽²⁾)\n\njulia> a,b = SpinOrbital(o\"1s\", 0, half(1)),SpinOrbital(o\"3d\", 0, half(1))\n(1s₀α, 3d₀α)\n\njulia> dot((a,b), 𝐊⁰⋅𝐊⁰, (a,b))\n1.0\n\njulia> dot((a,b), 𝐊²⋅𝐊², (b,a))\n0.19999999999999998\n\njulia> a,b = SpinOrbital(ro\"1s\", half(1)),SpinOrbital(ro\"3d\", half(1))\n(1s(1/2), 3d(1/2))\n\njulia> dot((a,b), 𝐊⁰⋅𝐊⁰, (a,b))\n1.0\n\njulia> dot((a,b), 𝐊²⋅𝐊², (b,a))\n0.12\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Intermediate-level-interface","page":"Tensor matrix elements","title":"Intermediate-level interface","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"dot dispatches to this level, passing the system of the tensor operator considered as the first argument. At this level, the spin-orbitals are translated into quantum numbers, employed by the low-level interface.","category":"page"},{"location":"tensor_matrix_elements/#Coupled-orbitals","page":"Tensor matrix elements","title":"Coupled orbitals","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"In the case of coupled orbitals, RelativisticOrbitals in the nomenclature of AtomicLevels.jl, if the operator acts on the entire system (or at least the total angular momentum), the Wigner–Eckart theorem eqrefeqnwigner-eckart can be applied. If however, the operators acts on a subsystem, the uncoupling formula eqrefeqnuncoupling has to be employed.","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element(::Union{FullSystem,TotalAngularMomentumSubSystem},\n               a::SpinOrbital{<:RelativisticOrbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:RelativisticOrbital})\nmatrix_element(system,\n               a::SpinOrbital{<:RelativisticOrbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:RelativisticOrbital})\nmatrix_element(::Tuple{S,S},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital}) where {S<:Union{FullSystem,TotalAngularMomentumSubSystem}}\nmatrix_element(systems::Tuple{S,S},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital}) where {S<:SubSystem}\nmatrix_element((s₁,s₂)::Tuple{<:SubSystem,<:SubSystem},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital})\nmatrix_element((s₁,s₂)::Tuple{<:AngularMomentumAlgebra.System,<:AngularMomentumAlgebra.System},\n               (a,b)::Tuple{<:SpinOrbital{<:RelativisticOrbital},\n                            <:SpinOrbital{<:RelativisticOrbital}},\n               X::TensorScalarProduct,\n               (c,d)::Tuple{<:SpinOrbital{<:RelativisticOrbital},\n                            <:SpinOrbital{<:RelativisticOrbital}})","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Union{FullSystem, TotalAngularMomentumSubSystem}, SpinOrbital{var\"#s6\", M} where {var\"#s6\"<:RelativisticOrbital, M<:Tuple}, TensorComponent, SpinOrbital{var\"#s5\", M} where {var\"#s5\"<:RelativisticOrbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(::Union{FullSystem,TotalAngularMomentumSubSystem},\n               a::SpinOrbital{<:RelativisticOrbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:RelativisticOrbital})\n\nThe matrix element of a tensor acting on the full system or the total angular momentum, evaluated in the basis of coupled spin-orbitals, is simply computed using the Wigner–Eckart theorem eqrefeqnwigner-eckart.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Any, SpinOrbital{var\"#s6\", M} where {var\"#s6\"<:RelativisticOrbital, M<:Tuple}, TensorComponent, SpinOrbital{var\"#s5\", M} where {var\"#s5\"<:RelativisticOrbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(system,\n               a::SpinOrbital{<:RelativisticOrbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:RelativisticOrbital})\n\nThe matrix element of a tensor acting on system, which is a subsystem, evaluated in the basis coupled spin-orbitals, needs to be computed via the uncoupling formula eqrefeqnuncoupling.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Union{Tuple{S}, Tuple{Tuple{S, S}, SpinOrbital{var\"#s6\", M} where {var\"#s6\"<:RelativisticOrbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s5\", M} where {var\"#s5\"<:RelativisticOrbital, M<:Tuple}}} where S<:Union{FullSystem, TotalAngularMomentumSubSystem}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(::Tuple{S,S},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital}) where {S<:Union{FullSystem,TotalAngularMomentumSubSystem}}\n\nThe matrix element of a tensor scalar product, where both factors act on the full system or the total angular momentum, evaluated in the basis of coupled spin-orbitals, is computed using eqrefeqnscalar-product-tensor-matrix-element.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Union{Tuple{S}, Tuple{Tuple{S, S}, SpinOrbital{var\"#s6\", M} where {var\"#s6\"<:RelativisticOrbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s5\", M} where {var\"#s5\"<:RelativisticOrbital, M<:Tuple}}} where S<:SubSystem","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(systems::Tuple{S,S},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital}) where {S<:SubSystem}\n\nThe matrix element of a tensor scalar product, where both factors act on the same subsystem, evaluated in the basis of coupled spin-orbitals, is computed using\n\nbeginequation\nbeginaligned\nmatrixeln_1j_1n_2j_2jmtensorP^(k)(1)cdottensorQ^(k)(1)n_1j_1n_2j_2jm\n=delta_n_2n_2delta_j_2j_2delta_j_1j_1delta_jjdelta_mm\nfrac1angrootj_1^2\n(-)^-j_1\ntimes\nsum_JN(-)^J\nredmatrixeln_1j_1tensorP^(k)(1)NJ\nredmatrixelNJtensorQ^(k)(1)n_1j_1\nendaligned\ntagV13143\nendequation\n\nApart from the additional factor delta_n_2n_2delta_j_2j_2, this expression is equivalent to eqrefeqnscalar-product-tensor-matrix-element.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{SubSystem, SubSystem}, SpinOrbital{var\"#s4\", M} where {var\"#s4\"<:RelativisticOrbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s3\", M} where {var\"#s3\"<:RelativisticOrbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((s₁,s₂)::Tuple{<:SubSystem,<:SubSystem},\n               a::SpinOrbital{<:RelativisticOrbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:RelativisticOrbital})\n\nThe matrix element of a tensor scalar product, where the factors act on different subsystems, evaluated in the basis of coupled spin-orbitals, is computed using eqrefeqnscalar-product-tensor-matrix-element-diff-coords-coupled.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{AngularMomentumAlgebra.System, AngularMomentumAlgebra.System}, Tuple{SpinOrbital{var\"#s2\", M} where {var\"#s2\"<:RelativisticOrbital, M<:Tuple}, SpinOrbital{var\"#s1\", M} where {var\"#s1\"<:RelativisticOrbital, M<:Tuple}}, TensorScalarProduct, Tuple{SpinOrbital{var\"#s9\", M} where {var\"#s9\"<:RelativisticOrbital, M<:Tuple}, SpinOrbital{var\"#s10\", M} where {var\"#s10\"<:RelativisticOrbital, M<:Tuple}}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((s₁,s₂)::Tuple{<:System,<:System},\n               (a,b)::Tuple{<:SpinOrbital{<:RelativisticOrbital},\n                            <:SpinOrbital{<:RelativisticOrbital}},\n               X::TensorScalarProduct,\n               (c,d)::Tuple{<:SpinOrbital{<:RelativisticOrbital},\n                            <:SpinOrbital{<:RelativisticOrbital}})\n\nThe matrix element of a tensor scalar product, where the factors act on the orbital pairs a,c and b,d, respectively, evaluated in the basis of coupled spin-orbitals, is computed using eqrefeqnscalar-product-tensor-matrix-element-diff-coords-uncoupled together with eqrefeqnuncoupling applied to each matrix element between single orbitals; the individual spin-orbitals couple ell and s to form a total j, but they are not further coupled to e.g. a term.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Uncoupled-orbitals","page":"Tensor matrix elements","title":"Uncoupled orbitals","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element(system::Union{FullSystem,TotalAngularMomentumSubSystem},\n               a::SpinOrbital{<:Orbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:Orbital})\nmatrix_element(system,\n               a::SpinOrbital{<:Orbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:Orbital})\nmatrix_element(systems::Tuple{S,S},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital}) where {S<:Union{FullSystem,TotalAngularMomentumSubSystem}}\nmatrix_element(systems::Tuple{S,S},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital}) where {S<:SubSystem}\nmatrix_element((s₁,s₂)::Tuple{<:SubSystem,<:SubSystem},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital})\nmatrix_element((s₁,s₂)::Tuple{<:AngularMomentumAlgebra.System,<:AngularMomentumAlgebra.System},\n               (a,b)::Tuple{<:SpinOrbital{<:Orbital},\n                            <:SpinOrbital{<:Orbital}},\n               X::TensorScalarProduct,\n               (c,d)::Tuple{<:SpinOrbital{<:Orbital},\n                            <:SpinOrbital{<:Orbital}})","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Union{FullSystem, TotalAngularMomentumSubSystem}, SpinOrbital{var\"#s10\", M} where {var\"#s10\"<:Orbital, M<:Tuple}, TensorComponent, SpinOrbital{var\"#s9\", M} where {var\"#s9\"<:Orbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(::Union{FullSystem,TotalAngularMomentumSubSystem},\n               a::SpinOrbital{<:Orbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:Orbital})\n\nThe matrix element of a tensor acting on the full system or the total angular momentum, evaluated in the basis of uncoupled spin-orbitals, is computed by transforming to the coupled system via eqrefeqncoupling.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Any, SpinOrbital{var\"#s10\", M} where {var\"#s10\"<:Orbital, M<:Tuple}, TensorComponent, SpinOrbital{var\"#s9\", M} where {var\"#s9\"<:Orbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(system,\n               a::SpinOrbital{<:Orbital},\n               𝐓ᵏq::TensorComponent,\n               b::SpinOrbital{<:Orbital})\n\nThe matrix element of a tensor acting on system, which is a subsystem, evaluated in the basis uncoupled spin-orbitals, is given by\n\nbeginequation\nbeginaligned\nmatrixeln_1j_1m_1n_2j_2m_2tensorT^(k)_q(1)n_1j_1m_1n_2j_2m_2 \n=\ndelta_n_2n_2delta_j_2j_2delta_m_2m_2 \nmatrixeln_1j_1m_1tensorT^(k)_q(1)n_1j_1m_1\nendaligned\nlabeleqntensor-matrix-element-subsystem-uncoupled\ntagV13139\nendequation\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Union{Tuple{S}, Tuple{Tuple{S, S}, SpinOrbital{var\"#s10\", M} where {var\"#s10\"<:Orbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s9\", M} where {var\"#s9\"<:Orbital, M<:Tuple}}} where S<:Union{FullSystem, TotalAngularMomentumSubSystem}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(::Tuple{S,S},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital}) where {S<:Union{FullSystem,TotalAngularMomentumSubSystem}}\n\nThe matrix element of a tensor scalar product, where both factors act on the full system or the total angular momentum, evaluated in the basis of uncoupled spin-orbitals, is computed by transforming to the coupled system via eqrefeqncoupling, which then dispatches to eqrefeqnscalar-product-tensor-matrix-element.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Union{Tuple{S}, Tuple{Tuple{S, S}, SpinOrbital{var\"#s10\", M} where {var\"#s10\"<:Orbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s9\", M} where {var\"#s9\"<:Orbital, M<:Tuple}}} where S<:SubSystem","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element(systems::Tuple{S,S},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital}) where {S<:SubSystem}\n\nThe matrix element of a tensor scalar product, where both factors act on the same subsystem, evaluated in the basis of uncoupled spin-orbitals, is just a special case of eqrefeqntensor-matrix-element-subsystem-uncoupled combined with eqrefeqnscalar-product-tensor-matrix-element.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{SubSystem, SubSystem}, SpinOrbital{var\"#s8\", M} where {var\"#s8\"<:Orbital, M<:Tuple}, TensorScalarProduct, SpinOrbital{var\"#s7\", M} where {var\"#s7\"<:Orbital, M<:Tuple}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((s₁,s₂)::Tuple{<:SubSystem,<:SubSystem},\n               a::SpinOrbital{<:Orbital},\n               X::TensorScalarProduct,\n               b::SpinOrbital{<:Orbital})\n\nThe matrix element of a tensor scalar product, where the factors act on different subsystems, evaluated in the basis of uncoupled spin-orbitals, is computed using eqrefeqnscalar-product-tensor-matrix-element-diff-coords-uncoupled.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{AngularMomentumAlgebra.System, AngularMomentumAlgebra.System}, Tuple{SpinOrbital{var\"#s6\", M} where {var\"#s6\"<:Orbital, M<:Tuple}, SpinOrbital{var\"#s5\", M} where {var\"#s5\"<:Orbital, M<:Tuple}}, TensorScalarProduct, Tuple{SpinOrbital{var\"#s2\", M} where {var\"#s2\"<:Orbital, M<:Tuple}, SpinOrbital{var\"#s1\", M} where {var\"#s1\"<:Orbital, M<:Tuple}}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((s₁,s₂)::Tuple{<:System,<:System},\n               (a,b)::Tuple{<:SpinOrbital{<:Orbital},\n                            <:SpinOrbital{<:Orbital}},\n               X::TensorScalarProduct,\n               (c,d)::Tuple{<:SpinOrbital{<:Orbital},\n                            <:SpinOrbital{<:Orbital}})\n\nThe matrix element of a tensor scalar product, where the factors act on the orbital pairs a,c and b,d, respectively, evaluated in the basis of uncoupled spin-orbitals, is computed using eqrefeqnscalar-product-tensor-matrix-element-diff-coords-uncoupled.\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Tensor-acts-on-entire-system","page":"Tensor matrix elements","title":"Tensor acts on entire system","text":"","category":"section"},{"location":"tensor_matrix_elements/#wigner_eckart","page":"Tensor matrix elements","title":"The Wigner–Eckart theorem","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element((γj′, m′)::Tuple{<:Any, <:Number},\n               Tᵏq::TensorComponent, (γj, m)::Tuple{<:Any, <:Number})","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{Any, Number}, TensorComponent, Tuple{Any, Number}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((γj′, m′), Tᵏq::TensorComponent, (γj, m))\n\nCalculate the matrix element ⟨γ′j′m′|Tᵏq|γjm⟩ via Wigner–Eckart's theorem:\n\nbeginequation\nbeginaligned\nmatrixelgammajmtensorT^(k)_qgamma jm\ndefd\n(-)^2k frac1angrootj\nC_jmkq^jm\nredmatrixelgamma jtensorT^(k)gamma j \n=\n(-)^j-m\nbeginpmatrix\njkj\n-mqm\nendpmatrix\nredmatrixelgammajtensorT^(k)gamma j\nendaligned\nlabeleqnwigner-eckart\ntagV1312\nendequation\n\nwhere the reduced matrix element redmatrixelnjtensorT^(k)nj does not depend on mm. j′ and j are the total angular momenta with m′ and m being their respective projections. γ′ and γ are all other quantum numbers needed to fully specify the quantum system; their presence depend on the quantum system.\n\nExamples\n\njulia> matrix_element((2, 1), TensorComponent(OrbitalAngularMomentum(), 1), (2, 0))\n-1.7320508075688774\n\njulia> matrix_element((0, 0), TensorComponent(SphericalTensor(1), 0), (1, 0))\n0.5773502691896256\n\njulia> matrix_element(((1,half(1),half(1)), -half(1)),\n                     TensorComponent(TotalAngularMomentum(), -1),\n                     ((1,half(1),half(1)), half(1)))\n0.7071067811865475\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Product-tensors","page":"Tensor matrix elements","title":"Product tensors","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element((γj′, m′), X::TensorScalarProduct, (γj, m))","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Any, TensorScalarProduct, Any}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((γj′, m′), X::TensorScalarProduct, (γj, m))\n\nCalculate the matrix element of a scalar product tensor according to:\n\nbeginequation\nbeginaligned\nmatrixelnjmtensorP^(k)cdottensorQ^(k)njm\n=\ndelta_jjdelta_mm\nfrac1angrootj^2\ntimessum_n_1j_1\n(-)^-j+j_1\nredmatrixelnjtensorP^(k)n_1j_1\nredmatrixeln_1j_1tensorQ^(k)nj\nendaligned\nlabeleqnscalar-product-tensor-matrix-element\ntagV13111\nendequation\n\nThe permissible values of n_1j_1 in the summation are found using AngularMomentumAlgebra.couplings; it is assumed that the summation only consists of a finite amount of terms and that\n\nredmatrixelnjtensorP^(k)n_1j_1neq0\niff\nredmatrixeln_1j_1tensorP^(k)njneq0\n\ni.e. that tensorP^(k) is (skew)symmetric.\n\nExamples\n\njulia> 𝐒 = SpinAngularMomentum()\n𝐒̂⁽¹⁾\n\njulia> 𝐒² = 𝐒⋅𝐒\n(𝐒̂⁽¹⁾⋅𝐒̂⁽¹⁾)\n\njulia> matrix_element((half(1), half(1)),\n                      𝐒², (half(1), half(1)))\n0.7499999999999998\n\njulia> half(1)*(half(1)+1) # S(S+1)\n0.75\n\njulia> 𝐉 = TotalAngularMomentum()\n𝐉̂⁽¹⁾\n\njulia> 𝐉² = 𝐉⋅𝐉\n(𝐉̂⁽¹⁾⋅𝐉̂⁽¹⁾)\n\njulia> matrix_element(((1, half(1), half(3)), half(3)),\n                      𝐉², ((1, half(1), half(3)), half(3)))\n3.7500000000000004\n\njulia> half(3)*(half(3)+1) # J(J+1)\n3.75\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Uncoupled-basis-functions","page":"Tensor matrix elements","title":"Uncoupled basis functions","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"For a tensor operator that depends on all coordinates, its matrix element in the uncoupled basis are computed via a basis transform to the coupled basis:","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element((γj₁′, m₁′), (γj₂′, m₂′), 𝐓ᵏq, (γj₁, m₁), (γj₂, m₂))","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-NTuple{5, Any}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((γj₁′, m₁′), (γj₂′, m₂′), 𝐓ᵏq, (γj₁, m₁), (γj₂, m₂))\n\nCompute the matrix element of the irreducible tensor 𝐓ᵏq acting on coordinates 1 and 2, by first coupling γj₁′m₁′γj₂′m₂′ and γj₁m₁γj₂m₂ to all permissible j′m′ and jm, respectively, according to\n\nbeginequation\nbeginaligned\nmatrixelγ_1j_1m_1γ_2j_2m_2tensorP^(k)_q(12)γ_1j_1m_1γ_2j_2m_2 \n= (-)^2k\nfrac1angrootj\nsum_jmjm\nC_j_1m_1j_2m_2^jm\nC_j_1m_1j_2m_2^jm\nC_jmkq^jm\ntimes\nredmatrixelγ_1j_1γ_2j_2jtensorP^(k)(12)γ_1j_1γ_2j_2j \nequiv\nsum_jmjm\nC_j_1m_1j_2m_2^jm\nC_j_1m_1j_2m_2^jm\nmatrixelγ_1j_1γ_2j_2jmtensorP^(k)(12)γ_1j_1γ_2j_2jm\nendaligned\ntagV13123\nlabeleqncoupling\nendequation\n\nThe non-vanishing terms of the sum are found using AngularMomentumAlgebra.couplings.\n\nExamples\n\njulia> 𝐉 = TotalAngularMomentum()\n𝐉̂⁽¹⁾\n\njulia> 𝐉₀ = TensorComponent(𝐉, 0)\n𝐉̂⁽¹⁾₀\n\njulia> matrix_element((1,1), (half(1),half(1)),\n                      𝐉₀, (1,1), (half(1), half(1)))\n1.5\n\njulia> matrix_element((1,-1), (half(1),half(1)),\n                      𝐉₀, (1,-1), (half(1), half(1)))\n-0.4999999999999999\n\njulia> 𝐉₁ = TensorComponent(𝐉, 1)\n𝐉̂⁽¹⁾₁\n\njulia> matrix_element((1,1), (half(1),half(1)),\n                      𝐉₁, (1,0), (half(1), half(1)))\n-1.0\n\njulia> 𝐉² = 𝐉⋅𝐉\n(𝐉̂⁽¹⁾⋅𝐉̂⁽¹⁾)\n\njulia> matrix_element((1,1), (half(1),half(1)),\n                      𝐉², (1,1), (half(1), half(1)))\n3.7500000000000004\n\njulia> half(3)*(half(3)+1) # J(J+1)\n3.75\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Tensor-acts-on-subsystems","page":"Tensor matrix elements","title":"Tensor acts on subsystems","text":"","category":"section"},{"location":"tensor_matrix_elements/#Uncoupling","page":"Tensor matrix elements","title":"Uncoupling","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"When the tensor operator is reducible and only acts on one part of the quantum system, in the coupled basis we employ the following uncoupling formula:","category":"page"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element((γj₁′, γj₂′, j′, m′)::Tuple{<:Any, <:Any, <:Number, <:Number},\n               𝐓ᵏq::TensorComponent,\n               (γj₁, γj₂, j, m)::Tuple{<:Any, <:Any, <:Number, <:Number})","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element-Tuple{Tuple{Any, Any, Number, Number}, TensorComponent, Tuple{Any, Any, Number, Number}}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element","text":"matrix_element((γj₁′, γj₂′, j′, m′), 𝐓ᵏq, (γj₁, γj₂, j, m))\n\nCompute the matrix element of the tensor 𝐓ᵏq which acts on coordinate 1 only in the coupled basis, by employing the uncoupling formula\n\nbeginequation\nbeginaligned\nmatrixelγ_1j_1γ_2j_2jmtensorT^(k)_q(1)γ_1j_1γ_2j_2jm\n= delta_j_2j_2delta_γ_2γ_2\n(-)^j+j_1+j_2-k\nangrootj\nC_jmkq^jm\ntimes\nwignersixjj_1j_2jjkj_1\nredmatrixelγ_1j_1tensorT^(k)(1)γ_1j_1\nendaligned\ntagV13140\nlabeleqnuncoupling\nendequation\n\nExamples\n\njulia> 𝐋₀ = TensorComponent(OrbitalAngularMomentum(), 0)\n𝐋̂⁽¹⁾₀\n\njulia> matrix_element((1, half(1), half(3), half(3)),\n                      𝐋₀, (1, half(1), half(3), half(3)))\n0.9999999999999999\n\njulia> matrix_element((1, 1), 𝐋₀, (1, 1)) # For comparison\n0.9999999999999999\n\njulia> 𝐒₀ = TensorComponent(SpinAngularMomentum(), 0)\n𝐒̂⁽¹⁾₀\n\njulia> matrix_element((half(1), 1, half(3), half(3)),\n                      𝐒₀, (half(1), 1, half(3), half(3)))\n0.49999999999999994\n\njulia> matrix_element((half(1),half(1)), 𝐒₀, (half(1),half(1)))\n0.49999999999999994\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#Evaluation-in-subspace","page":"Tensor matrix elements","title":"Evaluation in subspace","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"In the uncoupled basis, the matrix element of a tensor operator acting only on a subsystem is simply given by the appropriate matrix_element applied to the quantum numbers characterizing the subspace, with the extra diagonality constraint for the other_quantum_numbers enforced using AngularMomentumAlgebra.@δ.","category":"page"},{"location":"tensor_matrix_elements/#Product-tensors-2","page":"Tensor matrix elements","title":"Product tensors","text":"","category":"section"},{"location":"tensor_matrix_elements/","page":"Tensor matrix elements","title":"Tensor matrix elements","text":"matrix_element2(γjm₁′, γjm₂′, X::TensorScalarProduct, γjm₁, γjm₂)\nmatrix_element2((γj₁′, γj₂′, j′, m′), X::TensorScalarProduct, (γj₁, γj₂, j, m))","category":"page"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element2-Tuple{Any, Any, TensorScalarProduct, Any, Any}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element2","text":"matrix_element2(γjm₁′, γjm₂′, X::TensorScalarProduct, γjm₁, γjm₂)\n\nThe matrix element of a scalar product of two tensors acting on different coordinates is given by (in the uncoupled basis)\n\nbeginequation\nbeginaligned\nmatrixelgamma_1j_1m_1gamma_2j_2m_2tensorP^(k)(1)cdottensorQ^(k)(2)gamma_1j_1m_1gamma_2j_2m_2\n=\nfrac1angrootj_1j_2\nsum_alpha(-)^-alpha\nC_j_1m_1kalpha^j_1m_1\nC_j_2m_2k-alpha^j_2m_2\ntimes\nredmatrixelgamma_1j_1tensorP^(k)(1)gamma_1j_1\nredmatrixelgamma_2j_2tensorQ^(k)(2)gamma_2j_2 \nequiv\nsum_alpha\n(-)^-alpha\nmatrixelgamma_1j_1m_1tensorP^(k)_alpha(1)gamma_1j_1m_1\nmatrixelgamma_2j_2m_2tensorQ^(k)_-alpha(2)gamma_2j_2m_2\nendaligned\ntagV13126\nlabeleqnscalar-product-tensor-matrix-element-diff-coords-uncoupled\nendequation\n\nSince the Clebsch–Gordan coefficients can be rewritten using 3j symbols and the 3j symbols vanish unless m_1 + alpha - m_1 = m_2 - alpha - m_2 = 0, we have\n\nalpha = m_1 - m_1 = m_2-m_2\n\nThis case occurs in two-body interactions, such as the Coulomb interaction, where 11 and 22 are pairs of orbitals and the scalar product tensor is a term in the multipole expansion in terms of Spherical tensors:\n\njulia> 𝐂⁰ = SphericalTensor(0)\n𝐂̂⁽⁰⁾\n\njulia> matrix_element2((0, 0), (0, 0), 𝐂⁰⋅𝐂⁰, (0,0), (0, 0)) # ⟨1s₀,1s₀|𝐂⁰⋅𝐂⁰|1s₀,1s₀⟩\n1.0\n\njulia> 𝐂¹ = SphericalTensor(1)\n𝐂̂⁽¹⁾\n\njulia> matrix_element2((0, 0), (1, 0), 𝐂¹⋅𝐂¹, (1,0), (2, 0)) # ⟨1s₀,2p₀|𝐂¹⋅𝐂¹|2p₀,3d₀⟩\n0.29814239699997186\n\njulia> matrix_element2((0, 0), (1, 1), 𝐂¹⋅𝐂¹, (1,0), (2, 1)) # ⟨1s₀,2p₁|𝐂¹⋅𝐂¹|2p₀,3d₁⟩\n0.25819888974716104\n\nbut also in the case of the operator tensorLcdottensorS and coordinates 1 and 2 correspond to orbital and spin angular momenta, respectively. We can verify this using the classical result known from spin–orbit splitting:\n\nbeginaligned\nJ^2 = (tensorL+tensorS)^2 = L^2 + 2tensorLcdottensorS + S^2\nimplies\nexpecttensorLcdottensorS =\nfrac12(expectJ^2 - expectL^2 - expectS^2) =\nfrac12J(J+1) - L(L+1) - S(S+1)\nendaligned\n\nIn the uncoupled basis, J is not a good quantum number (it is not a constant of motion), except for pure states, i.e. those with maximal absm_ell + m_s:\n\njulia> X = OrbitalAngularMomentum()⋅SpinAngularMomentum()\n(𝐋̂⁽¹⁾⋅𝐒̂⁽¹⁾)\n\njulia> matrix_element2((1, 1), (half(1), half(1)),\n                      X, (1,1), (half(1), half(1)))\n0.4999999999999999\n\njulia> 1/2*(half(3)*(half(3)+1)-1*(1+1)-half(1)*(half(1)+1)) # 1/2(J(J+1)-L(L+1)-S(S+1))\n0.5\n\n\n\n\n\n","category":"method"},{"location":"tensor_matrix_elements/#AngularMomentumAlgebra.matrix_element2-Tuple{Any, TensorScalarProduct, Any}","page":"Tensor matrix elements","title":"AngularMomentumAlgebra.matrix_element2","text":"matrix_element2((γj₁′, γj₂′, j′, m′), X::TensorScalarProduct, (γj₁, γj₂, j, m))\n\nThe matrix element of a scalar product of two tensors acting on different coordinates is given by (in the coupled basis)\n\nbeginequation\nbeginaligned\nmatrixeln_1j_1n_2j_2jmtensorP^(k)(1)cdottensorQ^(k)(2)n_1j_1n_2j_2jm\n= delta_jjdelta_mm\n(-)^j+j_1+j_2\nwignersixjj_1j_1kj_2j_2j\ntimes\nredmatrixeln_1j_1tensorP^(k)(1)n_1j_1\nredmatrixeln_2j_2tensorQ^(k)(2)n_2j_2\nendaligned\ntagV13129\nlabeleqnscalar-product-tensor-matrix-element-diff-coords-coupled\nendequation\n\njulia> X = OrbitalAngularMomentum()⋅SpinAngularMomentum()\n(𝐋̂⁽¹⁾⋅𝐒̂⁽¹⁾)\n\njulia> matrix_element2((1, half(1), half(3), half(3)),\n                       X, (1, half(1), half(3), half(3)))\n0.4999999999999999\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#tensors_spherical_tensors","page":"Spherical tensors","title":"Spherical tensors","text":"","category":"section"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"DocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\n    using LinearAlgebra\nend","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"The spherical tensors are related to the spherical harmonics as","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"tensorC^(k)_q defd\nsqrtfrac4pi2k+1\nY^k_q\ntagV517","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"SphericalTensor\nsystem(::Type{SphericalTensor})\nrme(ℓ′::Real,𝐂̂ᵏ::SphericalTensor,ℓ::Real)\nAngularMomentumAlgebra.couplings(tensor::SphericalTensor,ℓ)\nAngularMomentumAlgebra.ranks","category":"page"},{"location":"spherical_tensors/#AngularMomentumAlgebra.SphericalTensor","page":"Spherical tensors","title":"AngularMomentumAlgebra.SphericalTensor","text":"SphericalTensor(k)\n\nConstruct a spherical tensor of rank k.\n\n\n\n\n\n","category":"type"},{"location":"spherical_tensors/#AngularMomentumAlgebra.system-Tuple{Type{SphericalTensor}}","page":"Spherical tensors","title":"AngularMomentumAlgebra.system","text":"system(::Tensor)\n\nA general tensor acts on the full system, i.e. all coordinates.\n\n\n\n\n\nsystem(::Type{SphericalTensor})\n\nA spherical tensor only acts on the coordinates theta and phi.\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.rme-Tuple{Real, SphericalTensor, Real}","page":"Spherical tensors","title":"AngularMomentumAlgebra.rme","text":"rme(ℓ′,𝐂̂ᵏ,ℓ)\n\nCalculate the reduced matrix element of the spherical tensor of rank k:\n\nbeginaligned\nredmatrixelelltensorC^(k)ell\n=\nangrootell\nC_ell 0k0^ell0 =\n(-)^ell-k\nangrootellell\nwignerthreejellkell000\nendaligned\ntagV132107\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.couplings-Tuple{SphericalTensor, Any}","page":"Spherical tensors","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::SphericalTensor{k}, ℓ) where k\n\nGenerate all quantum numbers ℓ′ for which ⟨ℓ′||::SphericalTensor{k}||ℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.ranks","page":"Spherical tensors","title":"AngularMomentumAlgebra.ranks","text":"ranks(a, ::Type{SphericalTensor}, b)\n\nReturn which tensor ranks for spherical tensors that fulfill the triangle condition between spin-orbitals a and b.\n\n\n\n\n\nranks(a, ::Type{CoulombTensor}, b)\n\nReturn which tensor ranks for Coulomb tensors that fulfill the triangle condition between spin-orbitals a and b.\n\n\n\n\n\n","category":"function"},{"location":"spherical_tensors/#Dipole-tensor","page":"Spherical tensors","title":"Dipole tensor","text":"","category":"section"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"The dipole operator is a rank-1 Cartesian tensor that may be expressed using the rank-1 spherical tensor:","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"vecr equiv\nbeginbmatrixxyzendbmatrix\nequiv\nr\nbeginbmatrix\nfrac1sqrt2-tensorC^(1)_1 + tensorC^(1)_-1\nfracimsqrt2tensorC^(1)_1 + tensorC^(1)_-1\ntensorC^(1)_0\nendbmatrix","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"Dipole\nsystem(::Type{Dipole})\nAngularMomentumAlgebra.RadialMatrixElement\nrme((n′,ℓ′), ::Dipole, (n,ℓ))\nAngularMomentumAlgebra.couplings(tensor::Dipole, (n,ℓ)::Tuple{<:Number, <:Number})","category":"page"},{"location":"spherical_tensors/#AngularMomentumAlgebra.Dipole","page":"Spherical tensors","title":"AngularMomentumAlgebra.Dipole","text":"Dipole()\n\nConstruct a dipole tensor\n\n\n\n\n\n","category":"type"},{"location":"spherical_tensors/#AngularMomentumAlgebra.system-Tuple{Type{Dipole}}","page":"Spherical tensors","title":"AngularMomentumAlgebra.system","text":"system(::Type{Dipole})\n\nA dipole tensor only acts on the coordinates r, theta and phi.\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.RadialMatrixElement","page":"Spherical tensors","title":"AngularMomentumAlgebra.RadialMatrixElement","text":"RadialMatrixElement()\n\nThis represents the matrix element of the radial component of the dipole operator:\n\nexpectr =\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nr\nPsi_nell(r)\n\n\n\n\n\n","category":"type"},{"location":"spherical_tensors/#AngularMomentumAlgebra.rme-Tuple{Any, Dipole, Any}","page":"Spherical tensors","title":"AngularMomentumAlgebra.rme","text":"rme((n′,ℓ′), ::Dipole, (n,ℓ))\n\nComputes the reduced matrix element of 𝐃 in terms of RadialMatrixElement.\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.couplings-Tuple{Dipole, Tuple{Number, Number}}","page":"Spherical tensors","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::Dipole, (n, ℓ))\n\nGenerate all quantum numbers n′ℓ′ for which ⟨n′ℓ′||::Dipole||nℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"spherical_tensors/#AngularMomentumAlgebra.Dipoles","page":"Spherical tensors","title":"AngularMomentumAlgebra.Dipoles","text":"","category":"section"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"This submodule exists only as a shortcut to Cartesian tensor components.","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"CurrentModule = AngularMomentumAlgebra","category":"page"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"Dipoles.𝐫̂\nDipoles.𝐫","category":"page"},{"location":"spherical_tensors/#AngularMomentumAlgebra.Dipoles.𝐫̂","page":"Spherical tensors","title":"AngularMomentumAlgebra.Dipoles.𝐫̂","text":"𝐫̂\n\nThe angular part of the dipole operator; the elements correspond to [x,y,z], i.e. the Cartesian tensor components. Can be entered as \\bfr\\hat.\n\nExamples\n\njulia> using AngularMomentumAlgebra.Dipoles\n\njulia> z = 𝐫̂[3]\n𝐂̂⁽¹⁾₀\n\njulia> dot(SpinOrbital(o\"2s\", 0, half(1)), z, SpinOrbital(o\"2p\", 0, half(1)))\n0.5773502691896256\n\n\n\n\n\n","category":"constant"},{"location":"spherical_tensors/#AngularMomentumAlgebra.Dipoles.𝐫","page":"Spherical tensors","title":"AngularMomentumAlgebra.Dipoles.𝐫","text":"𝐫\n\nThe dipole operator; the elements correspond to [x,y,z], i.e. the Cartesian tensor components. Can be entered as \\bfr.\n\nExamples\n\njulia> using AngularMomentumAlgebra.Dipoles\n\njulia> z = 𝐫[3]\n𝐃̂⁽¹⁾₀\n\njulia> dot(SpinOrbital(o\"1s\", 0, half(1)), z, SpinOrbital(o\"2p\", 0, half(1)))\n0.57735r\n\njulia> dot(SpinOrbital(o\"2s\", 0, half(1)), z, SpinOrbital(o\"2p\", 0, half(1)))\n0.57735r\n\njulia> dot(SpinOrbital(o\"2p\", 0, half(1)), z, SpinOrbital(o\"3d\", 0, half(1)))\n0.516398r\n\n\n\n\n\n","category":"constant"},{"location":"spherical_tensors/","page":"Spherical tensors","title":"Spherical tensors","text":"CurrentModule = nothing\nDocTestSetup = nothing","category":"page"},{"location":"definitions/#Definitions","page":"Definitions","title":"Definitions","text":"","category":"section"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"CurrentModule = AngularMomentumAlgebra","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"This page defines much of the general notation and conventions used in the code. Where possible, we are consistent with Varshalovich (1988).","category":"page"},{"location":"definitions/#Shorthands","page":"Definitions","title":"Shorthands","text":"","category":"section"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"The abbreviation (-)^kdefd(-1)^k is used for the roots of negative unity (see also powneg1).","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"A commonly occurring factor in angular momentum algebra is","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"angrootj_1j_2j_n\ndefd(2j_1+1)(2j_2+1)(2j_n+1)^12\ntagV1313½","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"It can be calculated with the unexported AngularMomentumAlgebra.∏ function.","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"Indices appearing in pairs on only one side of an equation are implicitly summed over.","category":"page"},{"location":"definitions/#Spherical-harmonics","page":"Definitions","title":"Spherical harmonics","text":"","category":"section"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"We assume the following definition of the spherical harmonics","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"Y_m^ell(thetavarphi) = sqrtfrac2ell+14pifrac(ell-m)(ell+m) P_ell^m(costheta) mathrme^im m varphi\ntagV521","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"where theta and varphi are the usual spherical coordinates and P_ell^m(z) are the associated Legendre polynomials. The Condon-Shortley phase (-)^m is included in the definition of the Legendre polynomials, consistent with Varshalovich (1988).","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"An explicit expression for the Legendre polynomials is given by the Rodrigues formula:","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"P_ell^m(x) = frac(-)^m2^ell ell  (1 - x^2)^m2 fracmathrmd^ell+mmathrmdx^ell+m (x^2 - 1)^ell","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"Properties. The complex conjugate of a spherical harmonic can be expressed in terms of spherical harmonics:","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"barY^ell_m(thetavarphi) = (-)^m Y^ell_-m(thetavarphi)","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"The spherical harmonics are normalized","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"int_0^2pi int_0^pi\nbarY^ell_1_m_1(thetavarphi)\nY^ell_2_m_2(thetavarphi)\nsintheta difftheta diffvarphi\n= delta_ell_1 ell_2 delta_m_1 m_2\ntagV516","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"and the integral of three spherical harmonics is given by","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"int_0^2pi int_0^pi\nY^ell_1_m_1(thetavarphi)\nY^ell_2_m_2(thetavarphi)\nY^ell_3_m_3(thetavarphi)\nsintheta difftheta diffvarphi\n= frac1sqrt4pi angrootell_1ell_2ell_3\nbeginpmatrix\nell_1  ell_2  ell_3 \n0       0       0\nendpmatrix\nbeginpmatrix\nell_1  ell_2  ell_3 \nm_1     m_2     m_3\nendpmatrix\ntagV595","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"note: Differences from ISO 80000-2:2009\nThe ISO 80000-2:2009 standard standardizes some mathematical notations and conventions for definitions of some special functions.Index placement convention Unlike the ISO standard, we put the ell index on top and m on the bottom, to be consistent with the way the k and q indices are normally written for tensor operators.Spherical harmonics with negative m. The Condon-Shortley phase in the Legendre polynomials is consistent with the ISO standard. However, the definition of spherical harmonics differs slightly. Namely, the standard defines the spherical harmonics as followsY_m^ell(thetavarphi) =\nsqrtfrac2ell+14pifrac(ell-m)(ell+m)\nP_ell^m(costheta)\nmathrme^im m varphi\ntagISO1917which leads to the following relationship for the complex conjugate of Y_m^ellbarY_m^ell(thetavarphi) = Y_-m^ell(thetavarphi)We opt to follow the (arguably, more common) non-ISO definition to stay consistent with the primary reference of Varshalovich (1988).","category":"page"},{"location":"definitions/#Clebsch–Gordan-coefficients","page":"Definitions","title":"Clebsch–Gordan coefficients","text":"","category":"section"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"The Clebsch–Gordan coefficients are related to the 3j symbols as","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"C_j_1m_1j_2m_2^j_3m_3 equiv\nbraketj_1m_1j_2m_2j_3m_3 =\n(-)^j_1-j_2+m_3angrootj_3\nbeginpmatrix\nj_1j_2j_3\nm_1m_2-m_3\nendpmatrix\ntagV8112","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"They can be calculated with the clebsch_gordan function.","category":"page"},{"location":"definitions/#Wigner–Eckart-theorem","page":"Definitions","title":"Wigner–Eckart theorem","text":"","category":"section"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"For the Wigner–Eckart theorem, which defines the reduced matrix elements (RMEs) redmatrixeln jtensorT^(k)n j of a tensor operator of rank k, the convention is the following","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"beginalign\nmatrixeln j mtensorT^(k)_qn j m\ndefd\n(-)^2k frac1angrootj\nC_jmkq^jm\nredmatrixeln jtensorT^(k)n j nonumber \n=\n(-)^j-m\nbeginpmatrix\n j  k  j \n-m  q  m\nendpmatrix\nredmatrixeln jtensorT^(k)n j\ntagV1312\nendalign","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"The second form can be derived by using the relationship between the Clebsch–Gordan coefficients and the Wigner 3j symbols, and the permutation symmetries of the 3j symbol. The n and n labels represent all non angular momentum quantum numbers.","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"note: Other conventions for RMEs\nA simpler convention used by some books, that also generalizes to other symmetry groups, ismatrixeln j mtensorT^(k)_qn j m =\nbraketj_1 m_1 j_2 m_2j_3 m_3\nredmatrixeln jtensorT^(k)n jHowever, again to stay consistent with Varshalovich (1988), we shall not use it. But it must be noted that, as the Wigner–Eckart theorem functions as a definition for the reduced matrix elements, this choice will change the values of the RMEs.","category":"page"},{"location":"definitions/","page":"Definitions","title":"Definitions","text":"CurrentModule = nothing","category":"page"},{"location":"energy_expressions/#Energy-expressions","page":"Energy expressions","title":"Energy expressions","text":"","category":"section"},{"location":"energy_expressions/","page":"Energy expressions","title":"Energy expressions","text":"DocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\nend","category":"page"},{"location":"energy_expressions/","page":"Energy expressions","title":"Energy expressions","text":"AngularMomentumAlgebra.integrate_spinor\nMatrix","category":"page"},{"location":"energy_expressions/#AngularMomentumAlgebra.integrate_spinor","page":"Energy expressions","title":"AngularMomentumAlgebra.integrate_spinor","text":"integrate_spinor(me)\n\nPerform the spin-angular integration of the matrix element me, leaving only a radial integral multiplied by a spin-angular coefficient. The spin-angular integral is dependent on the specific combination of spin-orbitals and the operator (expressed as a tensor); the default implementation is to leave me as-is, corresponding to a spin-angular integral of unity.\n\n\n\n\n\nintegrate_spinor(me::OrbitalMatrixElement{2,<:Any,<:CoulombInteraction,<:Any})\n\nPerform the spin-angular integration of the two-electron matrix element me, by first multipole-expanding the Coulomb interaction and then integrating all the resulting terms over the spin-angular coordinates (see multipole_expand).\n\n\n\n\n\nintegrate_spinor(integral::NBodyTermFactor)\n\nDummy method that returns integral unchanged, used for all NBodyTermFactors that are not to be multipole-expanded.\n\n\n\n\n\n","category":"function"},{"location":"energy_expressions/#Base.Matrix","page":"Energy expressions","title":"Base.Matrix","text":"Matrix(op::QuantumOperator,\n       spin_cfgs::Vector{<:Configuration{<:SpinOrbital}}[, overlaps])\n\nGenerate the energy-expression associated with the quantum operator op, in the basis of the spin-configurations spin_cfgs, with an optional set of orbital overlaps, specifying any desired non-orthogonalities. The energy expression is generated in a basis-agnostic way by EnergyExpressions.jl and each term is then integrated over the spin-angular coordinates using integrate_spinor.\n\n\n\n\n\n","category":"type"},{"location":"energy_expressions/","page":"Energy expressions","title":"Energy expressions","text":" DocTestSetup = nothing","category":"page"},{"location":"multipole_expansions/#Multipole-expansions","page":"Multipole expansions","title":"Multipole expansions","text":"","category":"section"},{"location":"multipole_expansions/","page":"Multipole expansions","title":"Multipole expansions","text":"CurrentModule = AngularMomentumAlgebra\nDocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\nend","category":"page"},{"location":"multipole_expansions/","page":"Multipole expansions","title":"Multipole expansions","text":"multipole_expand_scalar_product\nmultipole_expand","category":"page"},{"location":"multipole_expansions/#AngularMomentumAlgebra.multipole_expand_scalar_product","page":"Multipole expansions","title":"AngularMomentumAlgebra.multipole_expand_scalar_product","text":"multipole_expand_scalar_product(a, b, P, Q, c, d)\n\nMultipole-expand the matrix element ⟨ab|P⋅Q|cd⟩, where the tensor P acts on orbitals a & c, and the tensor Q acts on orbitals b & d. The definition is taken from Eq. (13.1.26) of Varshalovich (1988).\n\n\n\n\n\n","category":"function"},{"location":"multipole_expansions/#AngularMomentumAlgebra.multipole_expand","page":"Multipole expansions","title":"AngularMomentumAlgebra.multipole_expand","text":"multipole_expand(integral::OrbitalMatrixElement{2,A,<:CoulombInteraction,B})\n\nMultipole-expand the two-body integral resulting from the Coulomb repulsion between two electrons.\n\n\n\n\n\n","category":"function"},{"location":"multipole_expansions/","page":"Multipole expansions","title":"Multipole expansions","text":" DocTestSetup = nothing","category":"page"},{"location":"gradients/#gradients","page":"Gradients","title":"Gradients","text":"","category":"section"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"The gradient is a rank-1 tensor, the reduced matrix element of which is given by","category":"page"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"beginequation\nlabeleqngradient-rme\ntagV13222\nredmatrixelnelltensornabla^(1)nell =\nsqrtell+1\nA_nellnelldelta_ellell+1 -\nsqrtell\nB_nellnelldelta_ellell-1\nendequation","category":"page"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"where","category":"page"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"beginequation\nbeginaligned\nA_nellnell defd\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nleft(partial_r-fracellrright)\nPsi_nell(r)\nB_nellnell defd\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nleft(partial_r+fracell+1rright)\nPsi_nell(r)\nendaligned\ntagV13223\nlabeleqngradient-rme-terms\nendequation","category":"page"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"note: Note\nWhen working in spherical coordinates, it is common to use the reduced wavefunction, since that simplifies the Laplacian and enforces vanishing Dirichlet boundary conditions at r=0:Phi(vecr) defd rPsi(vecr)This must be taken into account when computing matrix elements of differential operators with respect to the partial waves of the reduced wavefunction:nabla Psi = nabla fracPhir =\nleft(nablafrac1rright)Phi + frac1r(nablaPhi) =\n-fractensorn_1r^2Phi + frac1rnablaPhi =\nfrac1rleft(nabla - fractensorn_1rright)Phiwhich means that if ketnell and ketnell are partial waves of Phi, instead of eqrefeqngradient-rme, we need to usebeginequation\ntagrefeqngradient-rme*\nredmatrixelnelltensornabla^(1)-fractensorn_1rnell\n=\nsqrtell+1\ntildeA_nellnelldelta_ellell+1 -\nsqrtell\ntildeB_nellnelldelta_ellell-1\nendequationwherebeginequation\nbeginaligned\ntildeA_nellnelldelta_ellell+1\ndefd\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nleft(partial_r-fracell+1rright)\nPsi_nell(r)\ntildeB_nellnelldelta_ellell-1\ndefd\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nleft(partial_r+fracellrright)\nPsi_nell(r)\nendaligned\ntagrefeqngradient-rme-terms*\nendequationsincebeginequation\ntagV13211\nredmatrixelelltensorn_1ell =\nangrootell\nC_ell 010^ell0\nendequation(cf Spherical tensors since tensorn_1equivtensorC^(1)) andbeginequation\ntagV853334\nC_ell 010^ell0 =\n (ell+1)\n sqrtfrac(2ell)2(2ell+2)\n delta_ellell+1\n - ell\n sqrtfrac2(2ell-1)(2ell+1)\n delta_ellell-1\nsqrtfrac(ell+1)(2ell+1)\ndelta_ellell+1\n- sqrtfracell(2ell+1)\ndelta_ellell-1\nendequationbeginequation\ntagV13211*\nimpliesredmatrixelelltensorn_1ell =\nsqrtell+1\ndelta_ellell+1 -\nsqrtell\ndelta_ellell-1\nendequationi.e. r^-1 is subtracted from the centrifugal terms of A and B in eqrefeqngradient-rme-terms.For convenience, the ReducedGradient tensor is provided, to simplify working with reduced wavefunctions.","category":"page"},{"location":"gradients/#Example","page":"Gradients","title":"Example","text":"","category":"section"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"julia> using AngularMomentumAlgebra, AtomicLevels\n\njulia> orbitals = sos\"k[s-d]\"\n18-element Array{SpinOrbital{Orbital{Symbol},Tuple{Int64,HalfIntegers.Half{Int64}}},1}:\n ks₀α\n ks₀β\n kp₋₁α\n kp₋₁β\n kp₀α\n kp₀β\n kp₁α\n kp₁β\n kd₋₂α\n kd₋₂β\n kd₋₁α\n kd₋₁β\n kd₀α\n kd₀β\n kd₁α\n kd₁β\n kd₂α\n kd₂β\n\njulia> a,b,c = orbitals[[3,9,13]]\n3-element Array{SpinOrbital{Orbital{Symbol},Tuple{Int64,HalfIntegers.Half{Int64}}},1}:\n kp₋₁α\n kd₋₂α\n kd₀α\n\njulia> ∂x = cartesian_tensor_component(Gradient(), :x)\n- 0.707107 𝛁̂⁽¹⁾₁ + 0.707107 𝛁̂⁽¹⁾₋₁\n\njulia> dot(a, ∂x, b)\n0.447214(∂ᵣ + 3/r)\n\njulia> dot(b, ∂x, a)\n0.447214(∂ᵣ - 1/r)\n\njulia> dot(a, ∂x, c)\n- 0.182574(∂ᵣ + 3/r)\n\njulia> dot(c, ∂x, a)\n- 0.182574(∂ᵣ - 1/r)","category":"page"},{"location":"gradients/#Reference","page":"Gradients","title":"Reference","text":"","category":"section"},{"location":"gradients/#Gradient","page":"Gradients","title":"Gradient","text":"","category":"section"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"Gradient\nsystem(::Type{Gradient})\nAngularMomentumAlgebra.RadialGradientMatrixElement\nrme((n′,ℓ′)::Tuple{<:Number, <:Number}, ::Gradient, (n,ℓ)::Tuple{<:Number, <:Number})\nAngularMomentumAlgebra.couplings(tensor::Gradient, (n,ℓ)::Tuple{<:Number, <:Number})","category":"page"},{"location":"gradients/#AngularMomentumAlgebra.Gradient","page":"Gradients","title":"AngularMomentumAlgebra.Gradient","text":"Gradient()\n\nConstruct a gradient tensor.\n\n\n\n\n\n","category":"type"},{"location":"gradients/#AngularMomentumAlgebra.system-Tuple{Type{Gradient}}","page":"Gradients","title":"AngularMomentumAlgebra.system","text":"system(::Type{Gradient})\n\nThe gradient only acts on the coordinates r, theta, and phi.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#AngularMomentumAlgebra.RadialGradientMatrixElement","page":"Gradients","title":"AngularMomentumAlgebra.RadialGradientMatrixElement","text":"RadialGradientMatrixElement(k)\n\nThis represents the matrix element of the radial component of the gradient operator:\n\nbeginequation\ntagV13223\nint_0^inftydiffrr^2\nconjPsi_nell(r)\nleft(partial_r+frackrright)\nPsi_nell(r)\nendequation\n\n\n\n\n\n","category":"type"},{"location":"gradients/#AngularMomentumAlgebra.rme-Tuple{Tuple{Number, Number}, Gradient, Tuple{Number, Number}}","page":"Gradients","title":"AngularMomentumAlgebra.rme","text":"rme((n′,ℓ′), ::Gradient, (n,ℓ))\n\nComputes the reduced matrix element of ∇ in terms of RadialGradientMatrixElement.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#AngularMomentumAlgebra.couplings-Tuple{Gradient, Tuple{Number, Number}}","page":"Gradients","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::Gradient, (n, ℓ))\n\nGenerate all quantum numbers n′ℓ′ for which ⟨n′ℓ′||::Gradient||nℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#Reduced-gradient","page":"Gradients","title":"Reduced gradient","text":"","category":"section"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"ReducedGradient\nsystem(::Type{ReducedGradient})\nrme((n′,ℓ′)::Tuple{<:Number, <:Number}, ::ReducedGradient, (n,ℓ)::Tuple{<:Number, <:Number})\nAngularMomentumAlgebra.couplings(tensor::ReducedGradient, (n,ℓ)::Tuple{<:Number, <:Number})","category":"page"},{"location":"gradients/#AngularMomentumAlgebra.ReducedGradient","page":"Gradients","title":"AngularMomentumAlgebra.ReducedGradient","text":"ReducedGradient()\n\nConstruct a gradient tensor acting on reduced wavefunctions.\n\n\n\n\n\n","category":"type"},{"location":"gradients/#AngularMomentumAlgebra.system-Tuple{Type{ReducedGradient}}","page":"Gradients","title":"AngularMomentumAlgebra.system","text":"system(::Type{ReducedGradient})\n\nThe reduced gradient only acts on the coordinates r, theta, and phi.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#AngularMomentumAlgebra.rme-Tuple{Tuple{Number, Number}, ReducedGradient, Tuple{Number, Number}}","page":"Gradients","title":"AngularMomentumAlgebra.rme","text":"rme((n′,ℓ′), ::ReducedGradient, (n,ℓ))\n\nComputes the reduced matrix element of ∂ in terms of RadialGradientMatrixElement.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#AngularMomentumAlgebra.couplings-Tuple{ReducedGradient, Tuple{Number, Number}}","page":"Gradients","title":"AngularMomentumAlgebra.couplings","text":"couplings(tensor::ReducedGradient, (n, ℓ))\n\nGenerate all quantum numbers n′ℓ′ for which ⟨n′ℓ′||::ReducedGradient||nℓ⟩ does not vanish.\n\n\n\n\n\n","category":"method"},{"location":"gradients/#AngularMomentumAlgebra.LinearMomenta","page":"Gradients","title":"AngularMomentumAlgebra.LinearMomenta","text":"","category":"section"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"CurrentModule = AngularMomentumAlgebra","category":"page"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"LinearMomenta.𝐩\nLinearMomenta.𝐩̃","category":"page"},{"location":"gradients/#AngularMomentumAlgebra.LinearMomenta.𝐩","page":"Gradients","title":"AngularMomentumAlgebra.LinearMomenta.𝐩","text":"𝐩\n\nThe linear momentum operator vecp=-imnabla; the elements correspond to [px,py,pz], i.e. the Cartesian tensor components. Can be entered as \\bfp.\n\n\n\n\n\n","category":"constant"},{"location":"gradients/#AngularMomentumAlgebra.LinearMomenta.𝐩̃","page":"Gradients","title":"AngularMomentumAlgebra.LinearMomenta.𝐩̃","text":"𝐩̃\n\nThe linear momentum operator vecp=-imnabla, but evaluated in the basis of reduced wavefunctions; the elements correspond to [px,py,pz], i.e. the Cartesian tensor components. Can be entered as \\bfp\\tilde.\n\n\n\n\n\n","category":"constant"},{"location":"gradients/","page":"Gradients","title":"Gradients","text":"CurrentModule = nothing\nDocTestSetup = nothing","category":"page"},{"location":"tensors/#Tensors","page":"General tensors","title":"Tensors","text":"","category":"section"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"DocTestSetup = quote\n    using AngularMomentumAlgebra\n    using AtomicLevels\n    using LinearAlgebra\nend","category":"page"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"Tensor\nTensorComponent\nAngularMomentumAlgebra.LinearCombinationTensor\nsystem(::Type{<:Tensor})","category":"page"},{"location":"tensors/#AngularMomentumAlgebra.Tensor","page":"General tensors","title":"AngularMomentumAlgebra.Tensor","text":"Tensor{k,label}\n\nAbstract base for any tensor of rank k.\n\n\n\n\n\n","category":"type"},{"location":"tensors/#AngularMomentumAlgebra.TensorComponent","page":"General tensors","title":"AngularMomentumAlgebra.TensorComponent","text":"TensorComponent(tensor, q)\n\nRepresents the qth component of a tensor; abs(q) ≤ rank(tensor).\n\n\n\n\n\n","category":"type"},{"location":"tensors/#AngularMomentumAlgebra.LinearCombinationTensor","page":"General tensors","title":"AngularMomentumAlgebra.LinearCombinationTensor","text":"LinearCombinationTensor\n\nRepresents a linear combination of tensor components.\n\n\n\n\n\n","category":"type"},{"location":"tensors/#AngularMomentumAlgebra.system-Tuple{Type{var\"#s10\"} where var\"#s10\"<:Tensor}","page":"General tensors","title":"AngularMomentumAlgebra.system","text":"system(::Tensor)\n\nA general tensor acts on the full system, i.e. all coordinates.\n\n\n\n\n\n","category":"method"},{"location":"tensors/#Cartesian-tensor-components","page":"General tensors","title":"Cartesian tensor components","text":"","category":"section"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"The transformation of the tensor components of a rank-1 tensor from the Cartesian basis to the \"natural\" basis is given by:","category":"page"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"beginequation\nM(+10-1 leftarrow x y z)=\nbeginbmatrix\n-frac1sqrt2fracimsqrt2cdot\ncdotcdot1\nfrac1sqrt2fracimsqrt2cdot\nendbmatrix\nendequation","category":"page"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"cartesian_tensor_component","category":"page"},{"location":"tensors/#AngularMomentumAlgebra.cartesian_tensor_component","page":"General tensors","title":"AngularMomentumAlgebra.cartesian_tensor_component","text":"cartesian_tensor_component(t::Tensor{1}, c)\n\nThis returns the Cartesian tensor component c (valid choices are :x, :y, or :z) of the rank-1 tensor t, as a linear combination of its \"natural\" TensorComponents 1, 0, and -1. The transform matrix is M(+1, 0, -1 ← x, y, z) given in Table 1.2 on p. 14 of Varshalovich (1988).\n\nExamples\n\njulia> cartesian_tensor_component(Gradient(), :x)\n- 0.707107 𝛁̂⁽¹⁾₁ + 0.707107 𝛁̂⁽¹⁾₋₁\n\n\n\n\n\n","category":"function"},{"location":"tensors/#Product-tensors","page":"General tensors","title":"Product tensors","text":"","category":"section"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"TensorProduct","category":"page"},{"location":"tensors/#AngularMomentumAlgebra.TensorProduct","page":"General tensors","title":"AngularMomentumAlgebra.TensorProduct","text":"TensorProduct{K}(T, U)\n\nA tensor of rank K formed from the product of the tensors T and U, according to\n\nbeginequation\ntagV3120\ntensorX^(K)_Q equiv\ntensorT^(k_1)tensorU^(k_2)^(K)_Q defd\ntensorT^(k_1)_q_1\ntensorU^(k_2)_q_2\nC_k_1q_1k_2q_2^KQ\nendequation\n\n\n\n\n\n","category":"type"},{"location":"tensors/#Scalar-product","page":"General tensors","title":"Scalar product","text":"","category":"section"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"TensorScalarProduct\ndot(::Tensor, ::Tensor)","category":"page"},{"location":"tensors/#AngularMomentumAlgebra.TensorScalarProduct","page":"General tensors","title":"AngularMomentumAlgebra.TensorScalarProduct","text":"TensorScalarProduct(T, U)\n\nA tensor of rank 0 (and thus implicitly 0 projection) formed from the product of the tensors T and U (which have to have the same rank), according to\n\nbeginequation\ntagV313035\n(tensorT^(k) cdot\ntensorU^(k)) defd\n(-)^kangrootk\ntensorT^(k)\ntensorU^(k)^(0)_0 equiv\n(-)^q\ntensorT^(k)_q\ntensorU^(k)_-q\nendequation\n\n\n\n\n\n","category":"type"},{"location":"tensors/#LinearAlgebra.dot-Tuple{Tensor, Tensor}","page":"General tensors","title":"LinearAlgebra.dot","text":"dot(T::Tensor, U::Tensor)\n\nForm the scalar product of the two tensors T and U, which need to have the same rank.\n\nExamples\n\njulia> SphericalTensor(4)⋅SphericalTensor(4)\n(𝐂̂⁽⁴⁾⋅𝐂̂⁽⁴⁾)\n\n\n\n\n\n","category":"method"},{"location":"tensors/","page":"General tensors","title":"General tensors","text":"CurrentModule = nothing\nDocTestSetup = nothing","category":"page"},{"location":"#AngularMomentumAlgebra.jl","page":"Home","title":"AngularMomentumAlgebra.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AngularMomentumAlgebra.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Equation labelled (Vx.y.z) references equation (z) from section x.y of","category":"page"},{"location":"","page":"Home","title":"Home","text":"Varshalovich, D. A. (1988). Quantum Theory of Angular Momentum: Irreducible Tensors, Spherical Harmonics, Vector Coupling Coefficients, 3nj Symbols. Singapore Teaneck, NJ, USA: World Scientific Pub.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Condon–Shortley convention is employed throughout (if you spot a mistake, please tell me!), and formulas are taken from Varshalovich (1988) only, to ensure consistency.","category":"page"}]
}
